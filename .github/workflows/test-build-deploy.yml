name: Test & Build & Deploy

on:
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CONFIG_FILE: src/main/resources/application.properties
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set application.properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ${{ env.CONFIG_FILE  }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Test With Gradle
        run: ./gradlew --info test
  build:
     needs: test
     runs-on: ubuntu-latest
     env:
        DOCKER_IMAGE_NAME: sketchbrain-backend
        DOCKER_TAG: 1.0.${{ github.run_number }}
        CONFIG_FILE: src/main/resources/application.properties
     steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Set application.properties
       run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ${{ env.CONFIG_FILE  }}

     - name: Set up JDK 11
       uses: actions/setup-java@v3
       with:
         java-version: '11'
         distribution: 'temurin'

     - name: Build with Gradle
       run: ./gradlew bootBuildImage --imageName=${{ secrets.DOCKER_USER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

     - name: Login to DockerHub
       uses: docker/login-action@v1
       with:
         username: ${{ secrets.DOCKER_USER }}
         password: ${{ secrets.DOCKER_TOKEN }}

     - name: Push Docker Image to DockerHub
       run : docker push ${{ secrets.DOCKER_USER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
  deploy:
     needs: build
     runs-on: ubuntu-latest
     env:
       DOCKER_IMAGE_NAME: sketchbrain-backend
       DOCKER_TAG: 1.0.${{ github.run_number }}
       DEPLOY_YAML: yamls/sketchbrain-backend-deploy-template.yaml
     steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Set K8S Config
       run: mkdir ~/.kube && echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

     - name: Change Image Name In Yaml
       run: sed -i 's/#VERSION_STRING#/${{ secrets.DOCKER_USER }}\/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}/g' ${{ env.DEPLOY_YAML }}

     - name: Deploy on K8S
       run: kubectl apply -f ${{ env.DEPLOY_YAML }}
